name: VaRA feature library CI

on:
  push:
    branches: [ vara, vara-dev ]
  pull_request:
    branches: [ vara, vara-dev ]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-20.04 ]
        build: [ Debug, Release ]
        llvm-major: [ 10, 11 ]
        compiler: [ clang++-10, clang++-11, g++-9 ]
        include:
          - llvm-major: 10
            llvm-minor: 0
          - llvm-major: 11
            llvm-minor: 1
        exclude:
          - llvm-major: 10
            compiler: clang++-11
          - llvm-major: 11
            compiler: clang++-10
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install General Dependencies
        shell: bash
        run: |
          sudo apt-key adv --fetch-keys  https://apt.kitware.com/keys/kitware-archive-latest.asc
          sudo apt-add-repository -y 'deb https://apt.kitware.com/ubuntu/ focal main'
          sudo apt-get update
          sudo apt-get -y install cmake libstdc++6 libxml2-dev python3-dev graphviz gcc-9 g++-9

      - name: Install Strategy Dependencies
        shell: bash
        run: |
          sudo apt-key adv --fetch-keys https://apt.llvm.org/llvm-snapshot.gpg.key
          sudo add-apt-repository -y 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main'
          sudo add-apt-repository -y 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'
          sudo apt-get update
          sudo apt-get -y install clang-${{ matrix.llvm-major }} llvm-${{ matrix.llvm-major }}-dev clang-tidy-11

      - name: Build ${{ matrix.build }} with LLVM ${{ matrix.llvm-major }}
        env:
          BUILD_TYPE: ${{ matrix.build }}
          LLVM_VERSION: ${{ matrix.llvm-major }}.${{ matrix.llvm-minor }}
          CXX: ${{ matrix.compiler }}
        shell: bash
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLLVM_REQUESTED_VERSION=$LLVM_VERSION -DPYTHON_EXECUTABLE=$(which python3)
          cmake --build . -- -j

      - name: Run Tests
        env:
          CXX: ${{ matrix.compiler }}
        shell: bash
        run: |
          cd build
          cmake --build . --target check-vara-feature-unittests
          cmake --build . --target check-vara-feature-python
          cmake --build . --target check-vara-fm-viewer

      - name: Run Clang-Tidy
        env:
          CXX: ${{ matrix.compiler }}
        shell: bash
        run: |
          cd build
          cmake --build . --target tidy-vara-feature
