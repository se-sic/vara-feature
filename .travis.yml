language: cpp

os: linux
dist: bionic

before_install:
  - sudo apt-get -y install ninja-build libstdc++6 libxml2-dev

jobs:
  include:

    ################
    # Clang on linux

    # Clang legacy
    - name: Clang-9 Debug
      stage: Legacy
      install: &clang9
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - sudo add-apt-repository -y 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
        - sudo apt-get update
        - sudo apt-get -y llvm-9-dev clang++-9 clang-tidy-9
      env: CXX=clang++-9 BUILD_TYPE=Debug LLVM_VERSION=9
    - name: Clang-9 Release
      stage: Legacy
      install: *clang9
      env: CXX=clang++-9 BUILD_TYPE=Release LLVM_VERSION=9

    # Clang latest
    - name: Clang-10 Debug
      stage: Latest
      install: &clang10
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - sudo add-apt-repository -y 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
        - sudo apt-get update
        - sudo apt-get -y install llvm-10-dev clang++-10 clang-tidy-10
      env: CXX=clang++-10 BUILD_TYPE=Debug
    - name: Clang-10 Release
      stage: Latest
      install: *clang10
      env: CXX=clang++-10 BUILD_TYPE=Release

    ##############
    # GCC on linux

    # GCC latest
    - name: GCC-9 Debug
      stage: Latest
      install: &gcc9
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - sudo add-apt-repository -y 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        - sudo apt-get update
        - sudo apt-get -y install llvm-10-dev clang++-10 clang-tidy-10 g++-9
      env: CXX=g++-9 BUILD_TYPE=Debug
    - name: GCC-9 Release
      stage: Latest
      install: *gcc9
      env: CXX=g++-9 BUILD_TYPE=Release

script:
  - mkdir build
  - cd build
  - cmake .. -GNinja -DCMAKE_BUILD_TYPE=${BUILD_TYPE:?} -DLLVM_REQUESTED_VERSION=${LLVM_VERSION} -DPYTHON_EXECUTABLE=$(which python3)
  - cmake --build .
  - cmake --build . --target check-vara-feature-unittests
  - cmake --build . --target tidy-vara-feature
  - cmake --build . --target check-vara-feature-python

#branches:
#  only:
#    - vara
#    - vara-dev
